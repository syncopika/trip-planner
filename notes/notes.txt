db stuff

db name: trip_planner_test

2 tables:
users 
=======
id serial
username varchar(60) unique => make primary key instead and delete id?
password varchar(60)

destinations
============
username varchar(60)
destname varchar(60)
tripname varchar(60)
index int 		// the index of the destination for the trip it belongs to
latitude decimal (10,8)
longitude decimal (11,8)
metadata jsonb


///// accessing db locally
>psql -U postgres
>\dt => list tables
>\connect [db name] => use a particular db
>\l => list db
>\d [table name] => see table schema
> select * from destinations; // don't forget semicolon!

https://stackoverflow.com/questions/6583916/delete-duplicate-rows-from-small-table

// we should prevent duplicate records from being inserted (but to know that we need to look at multiple columns I think)
maybe helpful? https://dba.stackexchange.com/questions/9759/postgresql-multi-column-unique-constraint-and-null-values

TODO:
- testing for core components
- get a dummy map tile iframe for demoing? try https://maputnik.github.io/osm-liberty/
- get db backend set up

now:
- set zoom level?
- rename trip title
- reorder dests
- customize note text properties (i.e. font color, font size)? think accessibility?
- import json?

later:
- emit events rather than calling root?
- use Vuex to store trip data upon loading from some source?
- geocoding> get closest city? guess name of destination?


taoyuan airport coords:
lat: 25.078547687812375
long: 121.23264281923252

taipei main station coords:
lat: 25.046225057189716
long: 121.51738742959378
