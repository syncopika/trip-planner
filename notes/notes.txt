db stuff

db name: trip_planner_test

2 tables (users, destinations):
users 
=======
id serial // primary key
username varchar(60) unique
password varchar(60)

destinations
============
id serial // primary key
destname varchar(60)
tripname varchar(60)
index int 		// the index of the destination for the trip it belongs to. not sure this is a good idea.
latitude decimal (10,8)
longitude decimal (11,8)
metadata jsonb          // contains info about the destination like notes, start date, end date, etc.
username                 // foreign key to match with users

if we want to find all destinations for a user we can do:
SELECT users.username, destname FROM destinations FULL JOIN users on destinations.username = users.username;

///// accessing db locally
>psql -U postgres
>\dt => list tables
>\connect [db name] => use a particular db
>\l => list db
>\d [table name] => see table schema
> select * from destinations; // don't forget semicolon!

https://stackoverflow.com/questions/6583916/delete-duplicate-rows-from-small-table

// we should prevent duplicate records from being inserted (but to know that we need to look at multiple columns I think)
maybe helpful? https://dba.stackexchange.com/questions/9759/postgresql-multi-column-unique-constraint-and-null-values

// very helpful!
https://launchschool.com/books/sql_first_edition/read/multi_tables
https://newbedev.com/postgresql-foreign-key-on-delete-cascade
https://dev.to/studio_hungry/how-to-seed-a-postgres-database-with-node-384i

TODO:
- pay attention to eslint warnings and fix them?
- testing for core components
- get a dummy map tile iframe for demoing? done but this one might be good to use too: https://maputnik.github.io/osm-liberty/

now:
- set zoom level?
- rename trip title (partially done - need to update the actual data set with the new edit though if the change is valid)
- reorder dests
- customize note text properties (i.e. font color, font size)? think accessibility?
- expected data format for importing/exported files?
- allow user to set radius of area to get suggested next dests from

later:
- emit events rather than calling root?
- use Vuex to store trip data upon loading from some source?
- geocoding> get closest city? guess name of destination?

